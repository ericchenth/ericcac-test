===== BGP Route Injector =====

==== What is it ? ====

Some code which :
  * Can inject routes with arbitrary next-hops into your network
  * Can act as an IBGP or EBGP speaker (but not listener)

==== Where can I get it ? ====

The code is stored in our SVN repository: \\
[[http://svn.exa.org.uk/bgp/trunk|http://svn.exa.org.uk/bgp/trunk]] \\
[[http://fisheye.exa.org.uk/browse/BGP/trunk|Fisheye browsing]]

Get it with
   cd /opt
   svn co -r 118 http://svn.exa.org.uk/bgp/trunk bgp

There is currently no tarball or official release yet.

We currently use revision 117 to source ASN112 and some /32 within our network.

==== How do you configure it ? ====

You provide the name of the configuration file as an argument to the program. For example:

   #!/bin/bash
   exec env PYTHONPATH=/opt/bgp/lib setuidgid nobody /opt/bgp/daemon/bgpd /opt/bgp/etc/bgp/as112.txt 2>&1

We are using [[http://cr.yp.to/daemontools.html|deamontools]] to run and supervise the application on crash, but we never saw it crash (touching wood).

As the application does not bind to port 179, or program the local routing table, it does not need any escalated privileges and will happily run as "nobody".

The configuration file is very juniper like :

IPv4 example

   neighbor 192.168.127.128 {
   	description "a quagga test peer";
   	router-id 192.168.127.1;
   	local-address 192.168.127.1;
   	local-as 65000;
   	peer-as 65534;
   
   	static {
   		route 10.0.1.0/24 {
   			next-hop 10.0.255.254;
   		}
   		route 10.0.2.0/24 {
   			next-hop 10.0.255.254;
   			community 30740:30740;
   		}
   		route 10.0.3.0/24 {
   			next-hop 10.0.255.254;
   			community [ 30740:30740 30740:0 ];
   		}
   		route 10.0.4.0/24 {
   			next-hop 10.0.255.254;
   			local-preference 200;
   		}
   		route 10.0.5.0/24 next-hop 10.0.255.254 local-preference 200;
   		route 10.0.6.0/24 next-hop 10.0.255.254 community 30740:30740;
   		route 10.0.7.0/24 next-hop 10.0.255.254 local-preference 200 community 30740:30740;
   		route 10.0.8.0/24 next-hop 10.0.255.254 community 30740:30740 local-preference 200;
   		route 10.0.7.0/24 next-hop 10.0.255.254 local-preference 200 community [30740:0 30740:30740];
   		route 10.0.8.0/24 next-hop 10.0.255.254 community [30740:0 30740:30740] local-preference 200;
   		route 10.0.5.0/24 next-hop 192.0.2.92 local-preference 10 community [ 0x87654321 ];
   	}
   }

IPv6 example

   neighbor 2a02:b80::2 {
   	description "a quagga test peer";
   	router-id 192.168.127.1;
   	local-address 2a02:b80::1;
   	local-as 65000;
   	peer-as 65534;
   	hold-time 180;
   	graceful-restart;
   
   	static {
   		route 1.2.3.4/32 next-hop 5.6.7.8;
   		route 2A02:B80:0:1::1/64 next-hop 2A02:B80:0:2::1 community [30740:0 30740:30740] local-preference 200;
   	}
   }


==== Tell me more about the code ====

It is written in Python 2.x for version 2.5 or later. \\
No tests have been performed to check if it works with version 3.0.

The Python specificities of 2.5/2.6 have been removed from the code at commit 102 and 2.4 will let you setup bgp adjacencies but there are issues when it comes to dealing with BGP Notification Messages.

The code only relies on the standard library and has no external dependencies.
==== Anticipated FAQ ====

Q: I am trying to connect to my router and it is not working \\
A: Did you enable multi-hop BGP on your router ?

Q: All seems fine but my route is not added to the routing table \\
A: You may need to allow for non-directly connected next-hop \\
A: (accept-remote-nexthop with Juniper)

Q: I see I can specify the as-path (as-sequence) sent to the peer. Do you prepend the router ASN to EBGP peers ? \\
A: Yes and No :) \\
A: Should you not define an as-path for a EBGP connection, we will add the router ASN automatically \\
A: Otherwise you must add it yourself. \\
A: As we are not a real router, we let you do whatever you want.

Q: I see an IPv6 example, is it fully IPv6 enabled ? \\
A: The injector allows TCP IPv4 or IPv6 connections as well as supporting the exchange of both IPv4 and IPv6 routes.

Q: Can you maintain more than one BGP session? \\
A: Yes, you can define more than one neighbor in the configuration file

Q: Is this code supported ? \\
A: YES - Should you find any bug, please report it. 

Q: Are you planning to add more features ? (support for vpnv4,etc) \\
A: I will only really code new features for my own use, but feel free to send me patches.

Q: Why did you implement Graceful Restart ? \\
A: My use case are machines announcing service IPs without lower MED/Local Prefence backup machines ready to take the over in case of problems. The BGP IPs are then still routed during reboots and in case of very high load for example it will not render the service IP unreacheable if some keepalive are missed. \\
A: If no graceful-restart time is set, the waiting time is set to be the same as the hold-time. As servers often take much longer than the default 180 seconds to reboots, we recommend that you set the graceful-restart timer to a much higher value. \\
A: GRACEFUL RESTART IS ONLY IMPLEMENTED FOR IPv4 Unicast (I am just lazy)

Q: I would like to inject routes in the network but my BGP speaker is behind a NATing firewall, will it work ? \\
A: Yes, just set your local-address as your machine LAN IP and the router-id as the firewall public IP and it will just work.

Q: As the code is single threaded, can a blocking network IO cause issues ? \\
A: We are using select to only read data when available but as we are not using a different thread for keepalive, so it could happen. Should it be a major concern, run one instance of the program per peer.

Q: As you have no separate thread for keepalives, how many peers do you think one instance can manage comfortably? \\
A: I have no answer as we only need one peer per application, but unless you speak to several dozen and have a very low keepalive time it should do fine.

Q: I am a Ruby coder and I hate Python \\
A: use ByteMark [[https://projects.bytemark.co.uk/projects/bgpfeeder|BGPFeeder]] a very similar application 
   hg clone http://src.bytemark.co.uk/bgpfeeder

Q: I am a Perl coder and I hate Python \\
A: Use [[http://code.google.com/p/bgpsimple|bgpsimple]]
   svn checkout http://bgpsimple.googlecode.com/svn/trunk/ bgpsimple-read-only

Q: But there is [[https://code.launchpad.net/pybgp| already one in Python]] ! \\
A: I am not sure if this project existed when I started or not but I clearly missed it ! (and it does not support the MultiProtocol Extensions for IPv6 but instead for ipv4 and vpnv4/mpls which was not good for me :p)
   bzr branch lp:pybgp

